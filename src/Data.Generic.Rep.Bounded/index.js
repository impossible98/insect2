// Generated by purs version 0.13.6
"use strict";
let Data_Bounded = require("../Data.Bounded/index.js");
let Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
let GenericTop = function (genericTop$prime) {
    this["genericTop'"] = genericTop$prime;
};
let GenericBottom = function (genericBottom$prime) {
    this["genericBottom'"] = genericBottom$prime;
};
let genericTopNoArguments = new GenericTop(Data_Generic_Rep.NoArguments.value);
let genericTopArgument = function (dictBounded) {
    return new GenericTop(Data_Bounded.top(dictBounded));
};
let genericTop$prime = function (dict) {
    return dict["genericTop'"];
};
let genericTopConstructor = function (dictGenericTop) {
    return new GenericTop(genericTop$prime(dictGenericTop));
};
let genericTopProduct = function (dictGenericTop) {
    return function (dictGenericTop1) {
        return new GenericTop(new Data_Generic_Rep.Product(genericTop$prime(dictGenericTop), genericTop$prime(dictGenericTop1)));
    };
};
let genericTopSum = function (dictGenericTop) {
    return new GenericTop(new Data_Generic_Rep.Inr(genericTop$prime(dictGenericTop)));
};
let genericTop = function (dictGeneric) {
    return function (dictGenericTop) {
        return Data_Generic_Rep.to(dictGeneric)(genericTop$prime(dictGenericTop));
    };
};
let genericBottomNoArguments = new GenericBottom(Data_Generic_Rep.NoArguments.value);
let genericBottomArgument = function (dictBounded) {
    return new GenericBottom(Data_Bounded.bottom(dictBounded));
};
let genericBottom$prime = function (dict) {
    return dict["genericBottom'"];
};
let genericBottomConstructor = function (dictGenericBottom) {
    return new GenericBottom(genericBottom$prime(dictGenericBottom));
};
let genericBottomProduct = function (dictGenericBottom) {
    return function (dictGenericBottom1) {
        return new GenericBottom(new Data_Generic_Rep.Product(genericBottom$prime(dictGenericBottom), genericBottom$prime(dictGenericBottom1)));
    };
};
let genericBottomSum = function (dictGenericBottom) {
    return new GenericBottom(new Data_Generic_Rep.Inl(genericBottom$prime(dictGenericBottom)));
};
let genericBottom = function (dictGeneric) {
    return function (dictGenericBottom) {
        return Data_Generic_Rep.to(dictGeneric)(genericBottom$prime(dictGenericBottom));
    };
};
module.exports = {
    GenericBottom: GenericBottom,
    "genericBottom'": genericBottom$prime,
    genericBottom: genericBottom,
    GenericTop: GenericTop,
    "genericTop'": genericTop$prime,
    genericTop: genericTop,
    genericBottomNoArguments: genericBottomNoArguments,
    genericBottomArgument: genericBottomArgument,
    genericBottomSum: genericBottomSum,
    genericBottomProduct: genericBottomProduct,
    genericBottomConstructor: genericBottomConstructor,
    genericTopNoArguments: genericTopNoArguments,
    genericTopArgument: genericTopArgument,
    genericTopSum: genericTopSum,
    genericTopProduct: genericTopProduct,
    genericTopConstructor: genericTopConstructor
};
